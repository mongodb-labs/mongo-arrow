[build-system]
requires = [
    "setuptools>=47.9",
    "wheel>=0.37",
    "cython>=0.29",
    # Must be kept in sync with "project.dependencies" below.
    "pyarrow>=13.0,<13.1.0",
]

[project]
name = "pymongoarrow"
description = '"Tools for using NumPy, Pandas and PyArrow with MongoDB"'
license = {text = "Apache License, Version 2.0"}
authors = [{name = "Prashant Mital"}]
maintainers = [{name = "MongoDB"}, {name = "Inc."}]
keywords = ["mongo", "mongodb", "pymongo", "arrow", "bson", "numpy", "pandas"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Database",
]
requires-python = ">=3.8"
dependencies = [
    # Must be kept in sync with "build_sytem.requires" above.
    "pyarrow >=13.0,<13.1",
    "pymongo >=4.4,<5",
    "pandas >=1.3.5,<3",
]
dynamic = ["version"]

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/mongodb-labs/mongo-arrow/tree/main/bindings/python"

[project.optional-dependencies]
docs = ["sphinx"]
test = ["pytz", "pytest"]

[tool.setuptools]
zip-safe = false
include-package-data = true
platforms = ["Linux", "Mac OS X"]

[tool.setuptools.package-data]
pymongoarrow = ["*.pxd", "*.pyx", "*.pyi", "*.so.*", "*.dylib", "*.dll", "*.pyd"]

[tool.setuptools.packages.find]
exclude = [
    "test",
    "docs",
]
namespaces = false

[tool.setuptools.dynamic]
version = {attr = "pymongoarrow.version.__version__"}

[tool.cibuildwheel]
skip = "pp* *-manylinux_i686 *_ppc64le *_s390x *-musllinux*"
before-build = "bash ./cibw_before_build.sh"
build-frontend = "build"
test-command = "python -c \"from pymongoarrow.lib import process_bson_stream\""
# Disable wheel repair, see https://jira.mongodb.org/browse/ARROW-122.
repair-wheel-command = ""

[tool.cibuildwheel.environment]
LIBBSON_INSTALL_DIR = "./libbson"

[tool.cibuildwheel.linux]
archs = "x86_64 aarch64"
manylinux-x86_64-image = "manylinux_2_28"
repair-wheel-command = [
    "pip install \"auditwheel>=5,<6\"",
    "python addtags.py {wheel} {dest_dir}"
]

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
test-skip = "*arm64"

[tool.pytest.ini_options]
minversion = "7"
addopts = ["-ra", "--strict-config", "--strict-markers", "--durations=5", "--junitxml=xunit-results/TEST-results.xml"]
testpaths = ["test"]
log_cli_level = "INFO"
norecursedirs = ["test/*"]
faulthandler_timeout = 1500
xfail_strict = true
filterwarnings = [
  "error"
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "S",           # flake8-bandit
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
]
ignore = [
  "PLR",        # Design related pylint codes
  "RUF012",     # Mutable class attributes should be annotated with `typing.ClassVar`
]
unfixable = [
]
exclude = [
]

[tool.ruff.lint.per-file-ignores]
"addtags.py" = ["T201", "PTH"]
"setup.py" = ["PTH", "EM", "B", "S", "E501"]
"docs/source/conf.py" = ["E501", "S", "PTH"]
"benchmarks.py" = ["T201", "E501", "C4"]
"test/*.py" = ["PT", "S", "ARG", "B", "C", "EM", "E501", "RUF005"]
