# Tox (https://tox.readthedocs.io) is a tool for running tests in multiple
# virtualenvs. "pip install tox>4" and run "tox" from this directory.

[tox]
requires =
    tox>=4

envlist =
    # Run the unit test suite
    test,
    # Build libbson
    build-libbson,
    # Build a dist
    build-dist,
    # Verify that import works without test deps
    import-check,
    # Run the benchmark test(s)
    benchmark,
    # Ensure the sphinx build has no errors or warnings.
    docs,
    # Serve live docs
    docs-serve,
    # Check links of sphinx docs
    linkcheck,
    # Run pre-commit on all files.
    lint
    # Run pre-commit on all files with manual checks.
    lint-manual
    # Check the sdist integrity.
    manifest

[testenv]
package = editable
passenv =
    NO_EXT
    LIBBSON_INSTALL_DIR

[testenv:.pkg]
passenv =
    NO_EXT
    LIBBSON_INSTALL_DIR

[testenv:test]
extras = test
commands =
    python -m pytest -v {posargs}

[testenv:build-libbson]
skip_install = true
passenv =
    LIBBSON_INSTALL_DIR
    CMAKE_BUILD_TYPE
    CMAKE_OSX_ARCHITECTURES
deps =
    packaging  # needed for mongo-c-driver-1.24.4/build/calc_release_version.py
    setuptools  # needed for use of distutils
allowlist_externals=bash
commands =
    bash build-libbson.sh

[testenv:build-dist]
skip_install = true
deps =
    build
commands =
    python -m build {posargs}

[testenv:import-check]
changedir = docs
commands =
    python -c "from pymongoarrow.lib import libbson_version"

[testenv:benchmark]
extras = test
deps =
    asv
commands =
    asv run -e --python={env_python} {posargs}

[testenv:docs]
changedir = docs
setenv =
    NO_EXT=1
deps =
    -rdocs/docs-requirements.txt
commands =
    python -m sphinx -q -E -W -b html source {envtmpdir}/html {posargs}

[testenv:docs-serve]
description = serve sphinx docs
setenv =
    NO_EXT=1
deps =
    {[testenv:docs]deps}
    sphinx-autobuild
changedir = docs
commands =
    sphinx-autobuild -W -b html source --watch ./pymongoarrow  ./_build/serve

[testenv:linkcheck]
setenv =
    PYTHONHASHSEED=0
deps =
    {[testenv:docs]deps}
changedir = docs
commands =
    python -m sphinx -q -E -b linkcheck source {envtmpdir}/linkcheck {posargs}

[testenv:lint]
skip_install = true
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files

[testenv:lint-manual]
skip_install = true
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files --hook-stage=manual

[testenv:manifest]
skip_install = true
deps =
    check-manifest
commands =
    python -m check_manifest -v
