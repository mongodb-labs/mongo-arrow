# Tox (https://tox.readthedocs.io) is a tool for running tests in multiple
# virtualenvs. "pip install tox>3.18" and run "tox" from this directory.

# Adapted from Tornado's tox.ini.

[tox]
requires =
    tox>=4

envlist =
    # Run the unit test suite
    test
    # Ensure the sphinx build has no errors or warnings.
    docs,
    # Run the doctests, include examples and tutorial, via Sphinx.
    doctest,
    # Check links of sphinx docs
    linkcheck,
    # Test with the latest PyMongo.
    test-pymongo-latest,
    # Apply PyMongo's test suite to Motor via Synchro.
    synchro
    # Run synchro tests with enterprise auth
    enterprise-synchro
    # Run pre-commit on all files.
    lint
    # Run pre-commit on all files with manual checks.
    lint-manual
    # Check the sdist integrity.
    manifest
    # Typecheck with mypy
    typecheck-mypy

[testenv]
passenv =
    LIBBSON_INSTALL_DIR
    CMAKE_BUILD_TYPE

[testenv:test]
extras =
    test
commands =
    python --version
    python -m pytest -v {posargs}

[testenv:build-libbson]
skip_install = true
deps =
    packaging  # needed for mongo-c-driver-1.24.4/build/calc_release_version.py
    setuptools  # needed for use of distutils
allowlist_externals=bash
commands =
    bash build-libbson.sh

[testenv:build-dist]
skip_install = true
deps =
    build
commands =
    python -m build {posargs}

[testenv:import-check]
commands =
    python -c "from pymongoarrow.monkey import patch_all; patch_all()"

[testenv:benchmark]
extras =
    test
deps =
    asv
commands =
    asv run -e --python=`which python` {posargs}

[testenv:docs]
setenv = NOEXT=1
extras =
    docs
changedir = docs
commands =
    python -m sphinx -q -E -W -b html source {envtmpdir}/html {posargs}

[testenv:docs-serve]
setenv = NOEXT=1
description = serve sphinx docs
deps =
    {[testenv:docs]deps}
    sphinx-autobuild
changedir = docs
commands =
    sphinx-autobuild -W -b html source --watch ./pymongoarrow  ./_build/serve

[testenv:linkcheck]
setenv = PYTHONHASHSEED=0 NOEXT=1
extras =
    docs
changedir = docs
commands =
    python -m sphinx -q -E -b linkcheck source {envtmpdir}/linkcheck {posargs}

[testenv:lint]
skip_install = true
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files

[testenv:lint-manual]
skip_install = true
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files --hook-stage=manual

[testenv:manifest]
skip_install = true
deps =
    check-manifest
commands =
    python -m check_manifest -v
