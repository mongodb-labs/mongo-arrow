name: Python Wheels

on:
  push:
  pull_request:

jobs:
  # MacOS
  build-osx-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [3.6, 3.7, 3.8, 3.9]
    name: Build CPython ${{ matrix.python-version }}-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        run: |
          ./release.sh
        working-directory: ./bindings/python
      - uses: actions/upload-artifact@v2
        with:
          name: pymongoarrow-${{ matrix.python-version }}-${{ matrix.os }}-wheel
          path: ./bindings/python/dist/*.whl
          if-no-files-found: error
  test-osx-wheels:
    needs: build-osx-wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [3.6, 3.7, 3.8, 3.9]
    name: Test CPython ${{ matrix.python-version }}-${{ matrix.os }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download a previously created wheel
        uses: actions/download-artifact@v2
        with:
          name: pymongoarrow-${{ matrix.python-version }}-${{ matrix.os }}-wheel
      - name: Test wheel
        run: |
          python -m pip install -U pip
          python -m pip install *.whl
          python -c "from pymongoarrow.lib import process_bson_stream"
  # Linux
  build-manylinux-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ['quay.io/pypa/manylinux2010_x86_64', 'quay.io/pypa/manylinux2014_x86_64']
        python-version: ['cp36-cp36m', 'cp37-cp37m', 'cp38-cp38', 'cp39-cp39']
#    container:
#      image: ${{ matrix.container }}
#      env:
#        PYTHON_BINARY: /opt/python/${{ matrix.python-version }}/bin/python
#      volumes:
#        - /bindings/python:/python
#      options: "--workdir /python"
    name: Build CPython ${{ matrix.python-version }}-${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels
        run: |
          docker run --rm --volume `pwd`:/python --workdir /python --env PYTHON_BINARY=/opt/python/${{ matrix.python-version }}/bin/python ${{ matrix.container }} ./release.sh
        working-directory: ./bindings/python
      - uses: actions/upload-artifact@v2
        with:
          name: pymongoarrow-${{ matrix.python-version }}-${{ matrix.container }}-wheel
          path: ./dist/*.whl
          if-no-files-found: error
  test-manylinux-wheels:
    runs-on: ubuntu-latest
    needs: build-manylinux-wheels
    strategy:
      matrix:
        container: ['quay.io/pypa/manylinux2010_x86_64', 'quay.io/pypa/manylinux2014_x86_64']
        python-version: ['cp36-cp36m', 'cp37-cp37m', 'cp38-cp38', 'cp39-cp39']
    container:
      image: ${{ matrix.container }}
      env:
        PYTHON_BINARY: /opt/python/${{ matrix.python-version }}/bin/python
    name: Test CPython ${{ matrix.python-version }}-${{ matrix.container }}
    steps:
      - name: Download a previously created wheel
        uses: actions/download-artifact@v2
        with:
          name: pymongoarrow-${{ matrix.python-version }}-${{ matrix.container }}-wheel
      - name: Test wheel
        run: |
          $PYTHON_BINARY -m pip install -U pip
          $PYTHON_BINARY -m pip install *.whl
          $PYTHON_BINARY -c "from pymongoarrow.lib import process_bson_stream"
