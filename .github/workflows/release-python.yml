name: Python Wheels

on:
  push:
  pull_request:

concurrency:
  group: wheels-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
        - [ubuntu-20.04, manylinux_x86_64]
        - [macos-10.15, macosx_*]
        - [windows-2019, win_amd64]
        python: ["cp37", "cp38", "cp39", "cp310"]

    steps:
      - name: Checkout pymongoarrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
        with:
          package-dir: ./bindings/python

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.python }}-${{ startsWith(matrix.buildplat[1], 'macosx') && 'macosx' || matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          # Build sdist on lowest supported Python
          python-version: '3.7'

      - name: Build SDist
        working-directory: ./bindings/python
        run: |
          python -m pip install -U pip build
          python -m build --sdist .

      - name: Test Sdist
        working-directory: ./bindings/python
        run: |
          python -m pip install dist/*.gz
          cd ..
          python -c "from pymongoarrow.lib import process_bson_stream"

      - uses: actions/upload-artifact@v2
        with:
          name: "sdist"
          path: ./bindings/python/dist/*.tar.gz

  collect-dist:
    runs-on: ubuntu-latest
    needs: [build-wheels, make_sdist]
    name: Download Wheels
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: Flatten directory
        run: |
          find . -mindepth 2 -type f -exec mv {} . \;
          find . -type d -empty -delete
      - uses: actions/upload-artifact@v2
        with:
          name: all-dist
          path: "./*"
